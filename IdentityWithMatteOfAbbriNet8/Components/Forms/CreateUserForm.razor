@page "/create-user"
@using AspNetCore.Identity.Mongo.Model
@using IdentityWithMatteOfAbbriNet8.Data.Models;
@using Microsoft.AspNetCore.Identity

@inject UserManager<SiteUser> _userManager;
@* @inject UserManager<MongoUser> _userManager *@;

@* <EditForm method="post" Model="Model" OnSubmit="FormSubmitted" FormName="CreateUserForm"> *@
<EditForm  Model="Model" OnSubmit="FormSubmitted" FormName="CreateUserForm">
    <h4>Create New User</h4>
    <div>
        <label>
            Name:
            <InputText @bind-Value="Model.UserName" />
        </label>
    </div>
    <div>
        <label>
            Email:
            <InputText @bind-Value="Model!.Email" />
        </label>
    </div>
    <div>
        <button type="submit">Submit</button>
    </div>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private  SiteUser Model { get; set; }
    //private MongoUser Model { get; set; }

    protected override void OnInitialized() => Model ??= new ();

    private string LastSubmitResult = "";
    //private void Submit() => Logger.LogInformation("Id = {Id}", Model?.Id);
    void FormSubmitted(EditContext editContext)
    {

        bool formIsValid = editContext.Validate();
        LastSubmitResult =
          formIsValid
          ? "Success - form was valid"
          : "Failure - form was invalid";

        if (formIsValid)
        {
            _userManager.CreateAsync(Model);
        }
    }
}